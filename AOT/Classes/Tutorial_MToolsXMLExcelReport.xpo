Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: CLS

; Microsoft Dynamics Class: Tutorial_MToolsXMLExcelReport выгружен
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #Tutorial_MToolsXMLExcelReport
    Id 51798
    PROPERTIES
      Name                #Tutorial_MToolsXMLExcelReport
      Extends             #MToolsXMLExcelRunBase
      RunOn               #Called from
    ENDPROPERTIES
    
    METHODS
      Version: 3
      SOURCE #classDeclaration
        #class Tutorial_MToolsXMLExcelReport extends MToolsXMLExcelRunBase
        #{
        #    DialogField             fieldUserGroupId;
        #    UserGroupId             userGroupId;
        #
        #    int userCount;
        #
        #    #define.CurrentVersion(1)
        #    #localmacro.CurrentList
        #        userGroupId
        #    #endmacro
        #}
      ENDSOURCE
      SOURCE #dialog
        #public Object dialog()
        #{
        #    DialogRunBase dialog = super();
        #;
        #    fieldUserGroupId = dialog.addFieldValue(typeid(UserGroupId), userGroupId);
        #    return dialog;
        #}
      ENDSOURCE
      SOURCE #fillBody
        #protected void fillBody()
        #{
        #    UserInfo userInfo;
        #    SysUserLog userLog;
        #    UserGroupList userGroupList;
        #    UserGroupInfo userGroupInfo;
        #;
        #    super();
        #    while select userInfo order by name
        #    {
        #        if (userGroupId)
        #        {
        #            select firstonly userGroupList
        #                where userGroupList.UserId == userInfo.id
        #                   && userGroupList.groupId == userGroupId;
        #            if (!userGroupList)
        #            {
        #                continue;
        #            }
        #        }
        #        userCount ++;
        #        select maxof(CreatedDate) from userLog
        #            where userLog.UserId == userInfo.Id &&
        #                  userLog.Type   == SysLogType::Login;
        #        excelReport.insertBlockByName('User',
        #            [123, 'Username', 01\01\1988],
        #            [userCount, strfmt('%1 - %2', userInfo.id, userInfo.name), userLog.createdDate]);
        #        while select userGroupList
        #            where userGroupList.UserId == userInfo.id
        #        join userGroupInfo order by name
        #            where userGroupInfo.id == userGroupList.groupId
        #        {
        #            excelReport.insertBlockByName('Group',
        #                ['Group'],
        #                [strfmt('%1 - %2', userGroupInfo.id, userGroupInfo.name)]);
        #        }
        #    }
        #}
      ENDSOURCE
      SOURCE #fillFoooter
        #protected void fillFoooter()
        #{
        #    super();
        #    excelReport.insertBlockByName('Footer', [123], [userCount]);
        #}
      ENDSOURCE
      SOURCE #fillHeader
        #protected void fillHeader()
        #{
        #    super();
        #    excelReport.insertBlock(0, ['Report header'], [Tutorial_MToolsXMLExcelReport::description()]);
        #}
      ENDSOURCE
      SOURCE #getFromDialog
        #public boolean getFromDialog()
        #{
        #    boolean ret;
        #;
        #    ret = super();
        #    if (ret)
        #    {
        #        userGroupId = fieldUserGroupId.value();
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #pack
        #public container pack()
        #{
        #    return[#CurrentVersion, #CurrentList];
        #}
      ENDSOURCE
      SOURCE #prepare
        #protected void prepare()
        #{
        #;
        #    excelReport.parmBlockNameLeftQuote('#!');
        #    excelReport.parmBlockNameRightQuote('!#');
        #    excelReport.parmExpandNameBlocksToRowElement(true);
        #    super();
        #}
      ENDSOURCE
      SOURCE #reportTemplateName
        #protected str reportTemplateName()
        #{
        #    return 'Tutorial_MToolsDocumentBuilderRunBase.xml';
        #}
      ENDSOURCE
      SOURCE #unpack
        #public boolean unpack(container packedClass)
        #{
        #    container   base;
        #    boolean     ret;
        #    integer     version = conPeek(packedClass, 1);
        #    switch (version)
        #    {
        #        case #CurrentVersion:
        #            [version, #CurrentList, base] = packedClass;
        #            ret = true;
        #            break;
        #        default:
        #            ret = false;
        #    }
        #    return ret;
        #}
      ENDSOURCE
      SOURCE #description
        #client server static ClassDescription description()
        #{
        #    return "@SYS27348";
        #}
      ENDSOURCE
      SOURCE #main
        #public static void main(Args _args)
        #{
        #    Tutorial_MToolsXMLExcelReport report = new Tutorial_MToolsXMLExcelReport();
        #;
        #    if (report.prompt())
        #    {
        #        report.run();
        #    }
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: END
